services:

  frontend:
    image: messenger-front:0.3
    build: frontend
    ports:
      - "8000:80"
    volumes:
      - "./nginx/compose.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - api-1
      - api-2
    networks:
      - frontend

  api-1:
    image: messenger:0.3
    build: .
    command: /bin/sh /app/run.sh
    env_file: .env

    depends_on:
      database:
        condition: service_healthy
      cache-broker:
        condition: service_started

    networks:
      - backend
      - frontend

  api-2:
    image: messenger:0.3
    build: .
    command: /bin/sh /app/run.sh
    env_file: .env

    depends_on:
      database:
        condition: service_healthy
      cache-broker:
        condition: service_started
      api-1:
        condition: service_started

    networks:
      - backend
      - frontend

  cache-broker:
    image: redis:7.4-alpine
    networks:
      - backend

  rmq:
    image: rabbitmq:3.13.0-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-msg_user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-msg_password}
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    volumes:
      - "./compose_data/rabbitmq:/var/lib/rabbitmq"
    networks:
      - backend

  synchronizer:
    image: messenger:0.3
    build: .
    command: python synchronizer.py
    env_file: .env

    depends_on:
      database:
        condition: service_healthy
      rmq:
        condition: service_started
    networks:
      - backend

  database:
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: msg_user
      POSTGRES_PASSWORD: msg_password
      POSTGRES_DB: msg_db
    volumes:
      - "./compose_data/pg_data:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U msg_user -d msg_db'"]
      start_period: 3s
      timeout: 10s
      interval: 5s
      retries: 5
    networks:
      - backend

networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.1.0/24

  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.2.0/24

  database:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.3.0/24
