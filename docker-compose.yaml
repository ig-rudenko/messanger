services:

  frontend:
    image: messanger-front:0.2
    build: frontend
    ports:
      - "8000:80"
    volumes:
      - "./nginx/compose.conf:/etc/nginx/conf.d/default.conf"
    depends_on:
      - api-1
      - api-2
    networks:
      - frontend

  api-1:
    image: messanger:0.2
    build: .
    command: /bin/sh /app/run.sh
    container_name: messanger-api-1
    env_file: .env

    depends_on:
      database:
        condition: service_healthy
      cache-broker:
        condition: service_started

    networks:
      - backend
      - frontend

  api-2:
    image: messanger:0.2
    build: .
    command: /bin/sh /app/run.sh
    container_name: messanger-api-2
    env_file: .env

    depends_on:
      database:
        condition: service_healthy
      cache-broker:
        condition: service_started
      api-1:
        condition: service_started

    networks:
      - backend
      - frontend

  database:
    image: postgres:17.2-alpine
    environment:
      POSTGRES_USER: msg_user
      POSTGRES_PASSWORD: msg_password
      POSTGRES_DB: msg_db
    volumes:
      - "./pg_data:/var/lib/postgresql/data"
    ports:
      - "127.0.0.1:5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U msg_user -d msg_db'"]
      start_period: 3s
      timeout: 10s
      interval: 5s
      retries: 5

    networks:
      - backend

  cache-broker:
    image: redis:7.4-alpine
    networks:
      backend:
        ipv4_address: "10.100.1.10"


networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.1.0/24

  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.2.0/24
